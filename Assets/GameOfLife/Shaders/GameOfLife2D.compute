#pragma kernel CSMain

RWTexture2D<float4> Result;

StructuredBuffer<int> _Tiles;

uint _TileCount;

uint GetNeighborCount(uint3 id)
{
    return
        Result[id.xy + float2(-1, -1)].x +
        Result[id.xy + float2(-1, 0)].x +
        Result[id.xy + float2(-1, 1)].x +
        Result[id.xy + float2(0, -1)].x +
        Result[id.xy + float2(0, 1)].x +
        Result[id.xy + float2(1, -1)].x +
        Result[id.xy + float2(1, 0)].x +
        Result[id.xy + float2(1, 1)].x;
}

uint GetNewValue(uint3 id)
{
    uint neighbors = GetNeighborCount(id);
    if (neighbors < 2 || neighbors > 3)
    {
        return 0;
    }
    
    if (neighbors == 3)
    {
        return 1;
    }

    return Result[id.xy].x;
}

#include "UnityCG.cginc"

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (_Time.y < 1)
    {
        float d1 = id.x * _Time.x;
        float d2 = pow(id.y, _Time.x);
        float d3 = sin(d1 + id.x) * cos(d1 - id.y);
        float d4 = d1 * d2 * d3;
        int v = d4 > 0.5f ? 1 : 0;
        Result[id.xy] = float4(v, v, v, 1);
        return;
    }

    int v = GetNewValue(id);
    //int v = Result[id.xy + float2(1, 0)].x;
    //int v = Result[id.xy].x;
    Result[id.xy] = float4(v, v, v, 1);
}
